-------------------------------------IMPORT-------------------------------------

package com.divad;
import java.io.File;import java.io.FileNotFoundException;import java.io.FileWriter;import java.io.IOException;import java.util.Scanner;
public class Import {
 private static final String OUTPUT_FOLDER = "D:\\ReactFolder"; private static final String INPUT_FILE = "D:\\ract-full.txt"; private static String path = null;
 public static void main(String[] args) {  try {   path =  new File(OUTPUT_FOLDER).getPath();   Scanner sc = new Scanner(new File(INPUT_FILE));   String outputFile = "";   StringBuilder text = null;   while (sc.hasNextLine()) {    String line = sc.nextLine();    if (line.startsWith("<<<")) {     outputFile = line.replace("<<<", "");     text = new StringBuilder();    } else if (line.startsWith(">>>")) {     saveFile(outputFile, text.toString());    } else {     text.append(line);     text.append("\r\n");    }   }   sc.close();  } catch (FileNotFoundException e) {   e.printStackTrace();  }
 }
 private static void saveFile(String fileName, String text) {  try {   File file = new File(path + fileName);   file.getParentFile().mkdirs();   System.out.println("creating file:" + path + file);   FileWriter fw = new FileWriter(file);   fw.write(text);   fw.close();
  } catch (IOException e) {   e.printStackTrace();  } }
}

-------------------------------------
EXPORT
-------------------------------------

package com.divad;
import java.io.File;import java.io.FileNotFoundException;import java.io.FileWriter;import java.io.IOException;import java.util.Scanner;
public class Export {
 private static final String FOLDER = "D:\\web-project"; private static final String OUTPUT_FILE = "D:\\ract-full.txt"; private static StringBuilder text = null; private static String path = null; private static final String[] FOLDER_EXCEPTION = new String[] { "test", "node_modules", "img" };
 public static void main(String[] args) {  text = new StringBuilder();  File folder = new File(FOLDER);  path = folder.getPath();  listFilesForFolder(folder);  System.out.println(text);  saveFile(OUTPUT_FILE);
 }
 private static void listFilesForFolder(File folder) {  for (File fileEntry : folder.listFiles()) {   if (fileEntry.isDirectory()) {    if (!isException(fileEntry.getName())) {     listFilesForFolder(fileEntry);    }   } else {    readFile(fileEntry.getAbsolutePath());   }  } }
 private static void readFile(String fileName) {
  text.append("<<<" + fileName.replace(path, "") + "\r\n");  Scanner sc = null;  try {   sc = new Scanner(new File(fileName));   while (sc.hasNextLine()) {    text.append(sc.nextLine());    text.append("\r\n");   }   text.append(">>>\r\n");   sc.close();  } catch (FileNotFoundException e) {   // TODO Auto-generated catch block   e.printStackTrace();  } }
 private static void saveFile(String fileName) {  try {   FileWriter fw = new FileWriter(new File(fileName));   fw.write(text.toString());   fw.close();
  } catch (IOException e) {   e.printStackTrace();  } }
 private static boolean isException(String text) {  for (String item : FOLDER_EXCEPTION) {   if (item.equalsIgnoreCase(text)) {    return true;   }  }  return false; }
}
